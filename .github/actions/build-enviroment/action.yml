name: 'Set up build environment'
description: 'Set up the build environment and determine build directory'
outputs:
  ARTIFACT_NAME:
    description: 'Name of the artifact to be uploaded'
    value: ${{ steps.set_artifact_name.outputs.ARTIFACT_NAME }}

inputs:
  ENV_PROD:
    description: 'Environment variable for production'
  ENV_STAGING:
    description: 'Environment variable for staging'
  ENV_BETA:
    description: 'Environment variable for beta'
  ENV_DEV:
    description: 'Environment variable for development'

runs:
  using: composite
  steps:
    - name: Create .env file
      shell: bash
      working-directory: ${{ github.workspace }}
      run: |
        # Function to get env content based on environment
        get_env_content() {
          case "$1" in
            "production")
              echo "${{ inputs.ENV_PROD }}"
              ;;
            "staging")
              echo "${{ inputs.ENV_STAGING }}"
              ;;
            "beta")
              echo "${{ inputs.ENV_BETA }}"
              ;;
            "development")
              echo "${{ inputs.ENV_DEV }}"
              ;;
            *)
              echo ""
              ;;
          esac
        }

        # Retrieve the environment variable
        ENVIRONMENT="${{ env.ENVIRONMENT }}"

        # Get the corresponding content
        ENV_CONTENT=$(get_env_content "$ENVIRONMENT")

        if [ -z "$ENV_CONTENT" ]; then
          echo "Unknown environment or no content found for: $ENVIRONMENT" >&2
          exit 1
        fi

        # Create the configuration directory if it doesn't exist
        CONFIG_DIR="configuration"
        mkdir -p "$CONFIG_DIR"
        echo "Created directory: $CONFIG_DIR"

        # Create the .env file based on the environment
        ENV_FILE="$CONFIG_DIR/.env.$ENVIRONMENT"
        echo "$ENV_CONTENT" > "$ENV_FILE"

        # Set the ENVFILE path in the GitHub environment for future steps
        echo "ENVFILE=$ENV_FILE" >> $GITHUB_ENV

        echo ".env file created at $ENV_FILE"

    - name: Set artifact name
      id: set_artifact_name
      shell: bash
      run: |
        # Create a unique artifact name using the environment and commit SHA
        ARTIFACT_NAME="${{ env.ENVIRONMENT }}-build-${{ github.sha }}"
        echo "ARTIFACT_NAME=$ARTIFACT_NAME" >> $GITHUB_OUTPUT

    - name: Set gradlew permissions
      if: ${{ env.PLATFORM == 'android' }}
      shell: bash
      run: |
        # Change permissions for the gradlew script to make it executable
        chmod +x android/gradlew
