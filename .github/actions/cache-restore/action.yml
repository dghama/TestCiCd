name: 'Cache Restore'

description: 'Restores cached dependencies for Node.js, CocoaPods, Ruby gems, and Fastlane plugins.'

runs:
  using: 'composite'
  steps:
    - name: Restore Node.js modules cache
      uses: actions/cache@v4
      with:
        path: node_modules
        key: ${{ runner.os }}-node-modules-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-node-modules-

    - name: Restore CocoaPods cache
      if: ${{ env.PLATFORM == 'ios' }}
      uses: actions/cache@v4
      with:
        path: |
          ios/Pods
          ios/Podfile.lock
        key: ${{ runner.os }}-pods-${{ hashFiles('ios/Podfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-pods-

    - name: Restore Ruby gems cache
      uses: actions/cache@v4
      with:
        path: |
          vendor/bundle
        key: ${{ runner.os }}-bundler-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-bundler-

    - name: Configure Bundler and environment
      run: |
            bundle config path vendor/bundle
            bundle config set --local deployment 'true' # This simulates a `bundle install` without actually installing
            bundle config set --local without 'development test' # Exclude unnecessary groups
            bundle binstubs --all # Ensure all executables are available
            bundle exec gem env # Debug: Check gem environment
      shell: bash
