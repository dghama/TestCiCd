name: Build Application
description: Build application for iOS and Android

outputs:
  artifact_name:
    description: 'Name of the uploaded artifact'
    value: ${{ steps.set_build_dir.outputs.ARTIFACT_NAME }}
#Amira addition
runs:
  using: 'composite'
  steps:
    - name: Set build directory
      id: set_build_dir
      shell: bash
      run: |
        ARTIFACT_NAME="${{ env.ENVIRONMENT }}-build-${{ github.sha }}"
        echo "ARTIFACT_NAME=$ARTIFACT_NAME" >> $GITHUB_OUTPUT
        if [[ "${{ env.PLATFORM }}" == "android" ]]; then
          echo "BUILD_DIR=android/app/build/outputs/apk" >> $GITHUB_OUTPUT
        elif [[ "${{ env.PLATFORM }}" == "ios" ]]; then
          # Extract the app name from the package.json file
          chmod +x .github/scripts/extract-app-name.sh
          APP_NAME=$(.github/scripts/extract-app-name.sh)
          
          # Set the build directory for iOS
          BUILD_DIR="ios/build/artifacts"
          echo "BUILD_DIR=$BUILD_DIR" >> $GITHUB_OUTPUT
          
          # Create the artifacts directory if it doesn't exist
          mkdir -p "$BUILD_DIR"
          
          # Find and copy the .ipa file
          IPA_FILE=$(find ios/build -name "*.ipa" | head -n 1)
          if [ -z "$IPA_FILE" ]; then
            echo "No .ipa file found" >&2
            exit 1
          fi
          cp "$IPA_FILE" "$BUILD_DIR/"
          
          # Copy Info.plist to the BUILD_DIR
          cp "ios/${APP_NAME}/Info.plist" "$BUILD_DIR/"
        else
          echo "Unsupported platform: ${{ env.PLATFORM }}" >&2
          exit 1
        fi

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.PLATFORM }}-${{ steps.set_build_dir.outputs.ARTIFACT_NAME }}
        path: ${{ steps.set_build_dir.outputs.BUILD_DIR }}
        compression-level: 6
        overwrite: false
        retention-days: 1
