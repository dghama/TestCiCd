name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - develop
      - main
      - 'v[0-9]+.[0-9]+.[0-9]+*beta*'
    types: [opened, synchronize]
  push:
    branches:
      - develop
      - main
      - 'v[0-9]+.[0-9]+.[0-9]+*beta*'

jobs:
  build_trigger:
    name: Build Trigger
    runs-on: ubuntu-latest
    outputs:
      build_job_id: ${{ steps.trigger_build.outputs.build_job_id }}
    steps:
      - name: Trigger Build
        id: trigger_build
        run: echo "::set-output name=build_job_id::$(date +%s)"

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: build_trigger
    if: github.event_name == 'push' || github.event_name == 'pull_request' && github.event.action == 'opened'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Yarn cache
        uses: actions/cache@v4
        with:
          path: ~/.yarn/cache
          key: ${{ runner.os }}-yarn-cache-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-cache-

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 14

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    needs: build
    env:
      NODE_ENV: test
      CI: true
    steps:
      - name: Run unit tests
        run: yarn test --forceExit

      - name: Run coverage
        run: yarn test --coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  lint:
    name: Run Lint Check
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Lint check
        run: ././scripts/lint.sh

  format:
    name: Run Format Check
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Prettier check
        run: yarn prettify

  typecheck:
    name: Run Type Check
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Type check
        run: yarn typecheck

  security:
    name: Run Snyk Security Scan
    runs-on: ubuntu-latest
    needs: build
    env:
      SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
    steps:
      - name: Snyk Security Scan
        uses: snyk/actions/node@master
        with:
          command: test
