name: Lint, Unit Tests, and Code Analysis

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
    types: [opened, synchronize]

concurrency:
  group: '${{ github.workflow }}-${{ github.head_ref || github.ref }}'
  cancel-in-progress: true

env:
  ENV: DEVELOPMENT

jobs:
  check_pr:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Disabling shallow clone is recommended for improving relevancy of reporting

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Run tests
        run: yarn test

      - name: Run type check
        run: yarn typecheck

      - name: Prettier check
        run: yarn prettier:check

      - name: Run tests with coverage
        run: yarn test

  check_env:
    runs-on: ubuntu-latest
    needs: check_pr
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Check Environment Variable
        run: |
          if [[ "${{ env.ENV }}" != "DEVELOPMENT" ]]; then
            echo "Environment variable ENV is not set to DEVELOPMENT. Exiting..."
            exit 1
          fi

  build_android:
    runs-on: ubuntu-latest
    needs: check_env
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Disabling shallow clone is recommended for improving relevancy of reporting

      - name: Set up Node.js
        uses: actions/setup-node@v4

      - name: Grant execute permission for gradlew
        run: |
          cd android
          chmod +x gradlew

      - name: Clean the project
        run: |
          cd android
          ./gradlew clean

      - name: Install and Build SDK for Android
        run: |
          yarn --frozen-lockfile
          mkdir -p android/app/src/main/assets
          yarn react-native bundle --platform android --dev false --entry-file index.js --bundle-output android/app/src/main/assets/index.android.bundle --assets-dest android/app/src/main/res
        working-directory: ./.github/actions/install-and-build-sdk

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Build Android Release
        run: cd android && ./gradlew assembleRelease

      - name: Upload Android Artifact
        uses: actions/upload-artifact@v3
        with:
          name: android-release
          path: android/app/build/outputs/apk/release/app-release.apk

  build_ios:
    runs-on: macos-latest
    needs: check_env
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Disabling shallow clone is recommended for improving relevancy of reporting

      - name: Set up Node.js
        uses: actions/setup-node@v4

      - name: Install and Build SDK for iOS
        run: |
          yarn --frozen-lockfile
          yarn react-native bundle --platform ios --dev false --entry-file index.js --bundle-output ios/main.jsbundle --assets-dest ios
          cd ios && pod install
        working-directory: ./.github/actions/install-and-build-sdk

      - name: Set up Xcode
        run: sudo xcode-select --switch /Applications/Xcode_12.5.app # Replace with your Xcode version

      - name: Build iOS Release
        run: |
          cd ios
          xcodebuild -workspace YourApp.xcworkspace -scheme YourApp -sdk iphoneos -configuration Release -archivePath $PWD/build/YourApp.xcarchive archive

      - name: Export iOS Archive
        run: |
          xcodebuild -exportArchive -archivePath $PWD/build/YourApp.xcarchive -exportOptionsPlist $PWD/ios/exportOptions.plist -exportPath $PWD/build

      - name: Upload iOS Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ios-release
          path: ios/build/*.ipa
