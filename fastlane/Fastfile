# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane


default_platform(:android)

before_all do
  @package = load_json(json_path: "./package.json")
end

platform :ios do
  desc 'iOS: Increment build number and set the version to package.json version.'
  private_lane :inc_ver_ios do
    increment_build_number(
      xcodeproj: "./ios/#{@package['name']}.xcodeproj"
    )
    increment_version_number(
      xcodeproj: "./ios/#{@package['name']}.xcodeproj",
      version_number: @package['version']
    )
  end

  desc 'Build the iOS app'
  lane :build do
    inc_ver_ios
    cocoapods(
      clean_install: true,
      podfile: "./ios/Podfile",
    )
    build_app(
      workspace: "./ios/#{@package['name']}.xcworkspace",
      scheme: @package['name'],
      export_method: "app-store",
      output_directory: "./ios/build",
      output_name: "#{@package['name']}.ipa",
      skip_codesigning: true

    )
  end
end

platform :android do
  desc 'Android: Increment versionCode and set versionName to package.json version.'
  private_lane :inc_ver_and do
    increment_version_code(
      gradle_file_path: "./android/app/build.gradle",
    )
    increment_version_name(
      gradle_file_path: "./android/app/build.gradle",
      version_name: @package['version']
    )
  end

  desc 'Prepare Android build environment'
  lane :prepare_keystore do
    # List files in the android directory for debugging purposes
    sh "ls -la android/"
  
    # Check if the gradlew file exists before setting permissions
    gradlew_path = "android/gradlew"
    if File.exist?(gradlew_path)
      sh "chmod +x #{gradlew_path}"
    else
      UI.user_error!("gradlew file not found at path: #{gradlew_path}")
    end
  
    # Decode Keystore
    if ENV['KEYSTORE_FILE'] && ENV['ANDROID_KEYSTORE_FILE']
      sh "echo \"#{ENV['KEYSTORE_FILE']}\" | base64 --decode > #{ENV['ANDROID_KEYSTORE_FILE']}"
    else
      UI.user_error!("Keystore environment variables are not set")
    end
  end
  
  desc 'Build the Android app'
  lane :build do
    prepare_keystore
    inc_ver_and
    gradle(
      task: "clean assembleRelease",
      project_dir: "android/",
      properties: {
        "android.injected.signing.store.file" => ENV["ANDROID_KEYSTORE_FILE"],
        "android.injected.signing.store.password" => ENV["KEYSTORE_PASSWORD"],
        "android.injected.signing.key.alias" => ENV["KEY_ALIAS"],
        "android.injected.signing.key.password" => ENV["KEY_PASSWORD"],
      }
    )
  end
  

  desc 'Upload the Android app to the MStore'
  lane :upload_android_to_mstore do
    mstore_upload_android(
      authorization: ENV['AUTHORIZATION'],
      app_dev_token: ENV['APP_DEV_TOKEN'],
      info_file: ENV['ANDROID_INFO_FILE'],
      apk_file: ENV['ANDROID_BUILD_FILE']
    )
  end

  
  desc 'Upload the iOS app to the MStore'
  lane :upload_ios_to_mstore do
    mstore_upload_ios(
      authorization: ENV['AUTHORIZATION'],
      app_dev_token: ENV['APP_DEV_TOKEN'],
      info_file: ENV['IOS_INFO_FILE'],
      ipa_file: ENV['IOS_BUILD_FILE']
    )
  end
end